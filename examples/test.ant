#### comments ####
# testing single-line comments

// testing single-line comments

/* Testing multi-line comments
testing multi-line comments */

// TODO: testing double-slash TODO

# TODO: testing number-sign TODO

/* 
TODO: testing multi-line TODO 
*/

#### species ####
species s = 4
// error check TODO: check if parameter/species is initialized?
s -> S2; k1*S1

#### parameters ####
p = 3

#### compartments ####
// error check TODO: check if parameters exist in scope
compartment c = 5
compartment cytoplasm = 1.5, mitochondria = 2.6
const S1 in mitochondria

const species S11 in comp2;

#### const ####
const S1;

const S222;

#### var ####
var species S4;

#### reaction ####
J0: S + E -> SE; k1*k2*S*E - k2*ES;

#### events ####
// error check TODO: check if parameters exist in scope
// at (x>5): y=3, x=r+2

#### function/model ####
// error check TODO: 
// 1. check if parameter exists in scope
// 2. check for unused parameters (warning)
function quadratic(x, a, b, c, unused)
  a*x^2 + b*x + c
end

// error check TODO:
// 1. check if parameter exists in scope
// 2. check if function exists in scope
species S3 = 0;

model quad1
  // species s = 4
  s -> S2; k1*S1
end

// modular model
model side_reaction(S, k1, unused)
  J0: S + E -> SE; k1*k2*S*E - k2*ES;
  E = 3;
  SE = E+S;
  k2 = 0.4;
end

A: side_reaction(S1, k4)

S3 := quadratic(s1, k1, k2, k3);

#### assignment rule ####
// error check TODO: check if each parameter exists in the scope
Ptot := P1 + P2 + PE;

#### Annotations ####
// error check TODO: check if entity exists
s identity "http://identifiers.org/chebi/CHEBI:76"
S1 identity "http://identifiers.org/chebi/CHEBI:16313"
z identity "http://identifiers.org/chebi/CHEBI:16313"

#### import ####
// error check TODO: check if file exists
// import "models1.txt"

#### Units ####
x = 40 substance;
species z = 40 grams;
species zz = 40 micromole;
species zzz = 40 10e-6 mole / liter;
// compound units
unit micromole = 10e-6 mole / liter;
unit substance = 1e-6 mole;
x = 40 foo/3 seconds;
// um.. probably a warning but this changes the unit
z has substance;
z = 20;
zzzz has substance;