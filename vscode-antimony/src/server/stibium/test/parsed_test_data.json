{"SBO_param_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'a')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '25')]), Token('NEWLINE', '')])])", "initialAssignment": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '4'), Token('SLASH', '/'), Token('NUMBER', '6')])]), Token('NEWLINE', '\\n')])])", "identity_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'identity'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '')])])", "kurtosis_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kurtosis')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '\\n')])])", "event_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_E0')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'x')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "eventPriority": "Tree('root', [Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Token('NUMBER', '2')])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'x')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')])])", "interactionInhibition": "Tree('root', [Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('interaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Ji')]), None]), Token('COLON', ':')]), Tree('species', [None, None, Token('NAME', 'S2')]), Token('INTERACTION_SYMBOL', '-|'), Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "externalParameter1": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'externalParameter')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '{'), Token('ERROR_TOKEN', '-'), Tree('error_node', [Token('NUMBER', '20')]), Token('ERROR_TOKEN', ','), Token('ERROR_TOKEN', '-'), Tree('error_node', [Token('NUMBER', '15')]), Token('ERROR_TOKEN', '}'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'externalParameter'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"http://my.url/\"')]), Token('NEWLINE', '\\n')])])", "deleteDelay2": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), Token('AFTER', 'after')]), Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'PRIORITY1')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'e2')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'delay2')]), Token('AFTER', 'after')]), Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'y2')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'priority2')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'z2')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'q2')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'DELAY1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteTrigger": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'Y1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "SBO_localvar": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sboTerm')]), None]), Token('EQUAL', '='), Token('NUMBER', '5')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '')])])", "SBO_species_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'a')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '25')]), Token('NEWLINE', '')])])", "deleteInitialAssignmentIndirect": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '2'), Token('SLASH', '/'), Token('NUMBER', '3')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'P1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteRateRuleDirect": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'P1'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'P1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'x'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteReaction": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C1')])])]), None])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'K1')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteRateRuleIndirect_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'P1'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'P1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "isVersionOf_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'hypernym'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '')])])", "compartment_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "initialConcentration": "Tree('root', [Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Tree('decl_assignment', [Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')])])", "deleteReactant": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S2')])]), Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'K1')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "externalParameter3": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'externalParameter')]), None]), Token('EQUAL', '='), Tree('atom', [Token('MINUS', '-'), Tree('var_name', [None, Token('NAME', 'x')])])]), Token('SEMICOLON', ';')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'externalParameter'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"http://my.url/\"')]), Token('NEWLINE', '\\n')])])", "deletePriority": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'PRIORITY1')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'PRIORITY1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "externalParameter2": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'externalParameter')]), None]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'x')])]), Token('SEMICOLON', ';')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'externalParameter'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"http://my.url/\"')]), Token('NEWLINE', '\\n')])])", "encodes_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'encodement'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '')])])", "isDescribedBy_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'description'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '')])])", "externalParameter2_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'externalParameter')]), None]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'x')])]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'externalParameter'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"http://my.url/\"')]), Token('NEWLINE', '')])])", "defaultSubCompartment": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "replaceReactionOnly": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'x')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'J1'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "occursIn": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'occursIn'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '\\n')])])", "deletePriority_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'PRIORITY1')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'PRIORITY1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'PRIORITY1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'PRIORITY1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "namedstoich_assignment": "Tree('root', [Tree('error_node', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Token('NAME', 'sr1')]), Token('ERROR_TOKEN', 'a'), Tree('error_node', [Token('ARROW', '->')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sr1')]), None]), Token('AEQ', ':='), Tree('sum', [Token('NUMBER', '2'), Token('PLUS', '+'), Token('NUMBER', '1')])]), Token('NEWLINE', '\\n')])])", "hasPart": "Tree('root', [Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'hasPart'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '\\n')])])", "BIOMD0000000696": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'Boada2016___Incoherent_type_1_feed_forward_loop__I1_FFL'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Cell')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x6')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'Cell')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x6')]), None]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Cell')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P_theta')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P_theta')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Cell')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'Boada2016___Incoherent_type_1_feed_forward_loop__I1_FFL'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"Boada2016 - Incoherent type 1 feed-forward loop (I1-FFL)\"')]), Token('NEWLINE', '')])])", "median": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'median')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '\\n')])])", "deleteDelay": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), Token('AFTER', 'after')]), Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'DELAY1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteEventAssignment4_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'Q1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "names": "Tree('root', [Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'x'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"This Name!\"')]), Token('NEWLINE', '\\n')])])", "eventT0": "Tree('root', [Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('T0', 't0'), Token('EQUAL', '='), Token('BOOLEAN', 'false')])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'x')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')])])", "SBO_submodel_shadowed": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sboTerm')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('var_name', [None, Token('NAME', 'A')]), Token('__ANON_0', '.sboTerm')]), Token('ERROR_TOKEN', 'is'), Tree('error_node', [Token('NAME', 'b')]), Token('ERROR_TOKEN', '\\n'), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'A')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '3')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'SBOTERM')]), None]), Token('EQUAL', '='), Token('NUMBER', '27')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'foo')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '83')]), Token('NEWLINE', '\\n')])])", "replaceReactionOnly_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'x')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__x'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'J1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "coefficientOfVariation_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'coefficientOfVariation')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '')])])", "SBO_compartment": "Tree('root', [Tree('error_node', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Token('NAME', 'a')]), Token('ERROR_TOKEN', '.sboTerm'), Token('ERROR_TOKEN', '='), Tree('error_node', [Token('NUMBER', '25')]), Token('ERROR_TOKEN', '\\n')])", "variance_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'variance')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '')])])", "replaceSpecies": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C1')])])]), None])]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'S2'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "compound_units2_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'voltage')]), Token('EQUAL', '='), Tree('product', [Tree('product', [Tree('atom', [Token('NUMBER', '1e3'), Tree('var_name', [None, Token('NAME', 'gram')])]), Token('STAR', '*'), Tree('power', [Tree('var_name', [None, Token('NAME', 'metre')]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '2')])]), Token('SLASH', '/'), Tree('atom', [Token('LPAR', '('), Tree('product', [Tree('power', [Tree('var_name', [None, Token('NAME', 'second')]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '3')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ampere')])]), Token('RPAR', ')')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "confidenceInterval_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'confidenceInterval')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '{'), Tree('error_node', [Token('NUMBER', '0')]), Token('ERROR_TOKEN', ','), Tree('error_node', [Token('NUMBER', '25')]), Token('ERROR_TOKEN', '}')])", "deleteRateRuleOfAnother": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'P1'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'X')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'X')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "replaceReactionWithKineticLaw": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'J1'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "hasTaxon": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'hasTaxon'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '\\n')])])", "interquartileRange_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'interquartileRange')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '{'), Tree('error_node', [Token('NAME', 'x')]), Token('ERROR_TOKEN', ','), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '}')])", "replaceSpeciesDefaultCompartment": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'S2'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "BIOMD0000000118": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('function', [Token('FUNCTION', 'function'), Token('NAME', 'GAMMA'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'VV'), Token('COMMA', ','), Token('NAME', 'theta'), Token('COMMA', ','), Token('NAME', 'sigma')]), Token('RPAR', ')'), Token('NEWLINE', '\\n'), Tree('product', [Token('NUMBER', '1'), Token('SLASH', '/'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Token('NUMBER', '1'), Token('PLUS', '+'), Tree('power', [Token('EXP', 'exp'), Tree('atom', [Token('LPAR', '('), Tree('product', [Tree('atom', [Token('MINUS', '-'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('var_name', [None, Token('NAME', 'VV')]), Token('MINUS', '-'), Tree('var_name', [None, Token('NAME', 'theta')])]), Token('RPAR', ')')])]), Token('SLASH', '/'), Tree('var_name', [None, Token('NAME', 'sigma')])]), Token('RPAR', ')')])])]), Token('RPAR', ')')])]), Token('SEMICOLON', ';'), Token('NEWLINE', '\\n'), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "eventPersistent_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_E0')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PERSISTENT', 'persistent'), Token('EQUAL', '='), Token('BOOLEAN', 'false')])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'x')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "interactionActivation_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('interaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Ji')]), None]), Token('COLON', ':')]), Tree('species', [None, None, Token('NAME', 'S2')]), Token('INTERACTION_SYMBOL', '-o'), Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "negparen": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Tree('atom', [Token('MINUS', '-'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('var_name', [None, Token('NAME', 'x')]), Token('PLUS', '+'), Token('NUMBER', '2')]), Token('RPAR', ')')])])]), Token('NEWLINE', '\\n')])])", "standardError_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'standardError')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '')])])", "boolean_event_delays": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'y')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'y')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'z')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'y')]), Token('COMPARE', '>='), Tree('var_name', [None, Token('NAME', 'z')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '<'), Tree('var_name', [None, Token('NAME', 'y')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '<='), Tree('var_name', [None, Token('NAME', 'y')]), Token('COMPARE', '<='), Tree('var_name', [None, Token('NAME', 'z')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'y')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'y')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'z')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'y')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'z')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'p')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'd')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'q')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'true')]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'false')]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('func_call', [Tree('var_name', [None, Token('NAME', 'isTrue')]), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'a')]), Token('RPAR', ')')]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('expressions', [Tree('var_name', [None, Token('NAME', 'a')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'b')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('bool_exp', [Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'a')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'b')])]), Token('RPAR', ')')]), Token('LOGICAL', '&&'), Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'b')]), Token('COMPARE', '<'), Tree('var_name', [None, Token('NAME', 'c')])]), Token('RPAR', ')')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('bool_exp', [Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'a')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'b')])]), Token('RPAR', ')')]), Token('LOGICAL', '&&'), Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'b')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'c')])]), Token('RPAR', ')')]), Token('LOGICAL', '&&'), Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'c')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'd')])]), Token('RPAR', ')')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('expressions', [Tree('var_name', [None, Token('NAME', 'a')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'b')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'c')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('expressions', [Tree('var_name', [None, Token('NAME', 'a')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'b')]), Token('COMPARE', '>='), Tree('var_name', [None, Token('NAME', 'c')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'a')]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Token('NUMBER', '1'), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('bool_exp', [Tree('var_name', [None, Token('NAME', 'true')]), Token('LOGICAL', '||'), Tree('atom', [Token('LPAR', '('), Tree('bool_exp', [Tree('var_name', [None, Token('NAME', 'false')]), Token('LOGICAL', '&&'), Tree('atom', [Token('LPAR', '('), Tree('bool_exp', [Tree('var_name', [None, Token('NAME', 'true')]), Token('LOGICAL', '||'), Tree('var_name', [None, Token('NAME', 'true')])]), Token('RPAR', ')')]), Token('LOGICAL', '&&'), Tree('var_name', [None, Token('NAME', 'false')])]), Token('RPAR', ')')])]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), Tree('event_delay', [Tree('atom', [Token('MINUS', '-'), Token('NUMBER', '0.5')]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '5')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n\\n')])])", "hasVersion": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'hasVersion'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '\\n')])])", "deleteSpeciesPort": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'S1')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C1')])])]), None])]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "rxn_right_mod_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_J0')]), None]), Token('COLON', ':')]), None, Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '')])])", "encodes": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'encodes'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '\\n')])])", "deleteAssignmentRuleIndirect_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('AEQ', ':='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "assignmentRule": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('AEQ', ':='), Token('NUMBER', '4.8')]), Token('NEWLINE', '')])])", "SBO_compartment_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'a')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '25')]), Token('NEWLINE', '')])])", "deleteAssignmentRuleIndirect": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('AEQ', ':='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "reaction001": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'default_compartment')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'S1')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'default_compartment')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '')])])", "sampleSize_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sampleSize')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '')])])", "boolean_rate_rules": "Tree('root', [Tree('error_node', [Token('FUNCTION', 'function'), Token('NAME', 'isTrue'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x')]), Token('RPAR', ')'), Token('NEWLINE', '\\n'), Tree('var_name', [None, Token('NAME', 'x')])]), Token('ERROR_TOKEN', '=='), Tree('error_node', [Token('NAME', 'true')]), Token('ERROR_TOKEN', '\\n'), Token('ERROR_TOKEN', 'end'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('error_node', [Token('NAME', 'a'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'x')])]), Token('ERROR_TOKEN', '>'), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Token('NAME', 'b'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'x')])]), Token('ERROR_TOKEN', '>'), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '>'), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Token('NAME', 'c'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'x')])]), Token('ERROR_TOKEN', '>'), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '>='), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Token('NAME', 'd'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'x')])]), Token('ERROR_TOKEN', '<'), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Token('NAME', 'e'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'x')])]), Token('ERROR_TOKEN', '<='), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '<='), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Token('NAME', 'f'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'x')])]), Token('ERROR_TOKEN', '=='), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Token('NAME', 'g'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'x')])]), Token('ERROR_TOKEN', '=='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Token('NAME', 'h'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'x')])]), Token('ERROR_TOKEN', '=='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'z')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'p')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'd')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Token('NAME', 'q')]), Token('ERROR_TOKEN', '\\n'), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'i'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'true')])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'j'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'false')])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'h'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Tree('func_call', [Tree('var_name', [None, Token('NAME', 'isTrue')]), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'a')]), Token('RPAR', ')')])]), Token('NEWLINE', '\\n')])])", "interactionActivation": "Tree('root', [Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('interaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Ji')]), None]), Token('COLON', ':')]), Tree('species', [None, None, Token('NAME', 'S2')]), Token('INTERACTION_SYMBOL', '-o'), Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteSpecies_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C1')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteProduct": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S2')])]), Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'K1')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S2')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "eventPriority_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_E0')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Token('NUMBER', '2')])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'x')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "namedstoich_rate": "Tree('root', [Tree('error_node', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Token('NAME', 'sr1')]), Token('ERROR_TOKEN', 'a'), Tree('error_node', [Token('ARROW', '->')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'sr1'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Token('NUMBER', '1.1')]), Token('NEWLINE', '')])])", "replaceSpeciesDefaultCompartment_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'S2'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "rateRule": "Tree('root', [Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'x'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Token('NUMBER', '4.4')]), Token('NEWLINE', '\\n')])])", "skewness_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'skewness')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '')])])", "namedstoich_value_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Token('NAME', 'sr1')]), Token('ERROR_TOKEN', 'a'), Tree('error_node', [Token('ARROW', '->')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sr1')]), None]), Token('EQUAL', '='), Token('NUMBER', '2')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '')])])", "replaceReactionWithCompartments2_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C2')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C1')])])]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'x')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'C1'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__C1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'C2'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__C2'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__x'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'J1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "isPropertyOf_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'propertyBearer'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '')])])", "SBO_reaction_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'A')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'J0')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '888')]), Token('NEWLINE', '')])])", "deleteModifierKineticLaw_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'S2')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'K1')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'K1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'K1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S2')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "isPartOf_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'parthood'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '')])])", "negparen_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Tree('atom', [Token('MINUS', '-'), Tree('atom', [Token('LPAR', '('), Tree('sum', [Tree('var_name', [None, Token('NAME', 'x')]), Token('PLUS', '+'), Token('NUMBER', '2')]), Token('RPAR', ')')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "hasTaxon_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'taxon'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '')])])", "replaceReactionOnly2_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), None, Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'x')])]), Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__x'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'J1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "replaceAssignmentRule_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('AEQ', ':='), Token('NUMBER', '4.8')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'y'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('AEQ', ':='), Token('NUMBER', '2.2')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "SBO_species": "Tree('root', [Tree('error_node', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Token('NAME', 'a')]), Token('ERROR_TOKEN', '.sboTerm'), Token('ERROR_TOKEN', '='), Tree('error_node', [Token('NUMBER', '25')]), Token('ERROR_TOKEN', '\\n')])", "namedstoich_basic_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Token('NAME', 'sr1')]), Token('ERROR_TOKEN', 'a'), Tree('error_node', [Token('ARROW', '->')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sr1')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '')])])", "subport_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x0')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x0')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x0')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x1')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x1')]), Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'baz'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x2')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'bar'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x2')]), Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "mode": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'mode')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '\\n')])])", "replaceReactionOnly2": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), None, Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'x')])]), Token('SEMICOLON', ';'), None, None]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'J1'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "module_name_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'foo'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"foo!\"')]), Token('NEWLINE', '')])])", "boolean_triggers": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'y')])]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'y')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'z')])]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '>'), Tree('var_name', [None, Token('NAME', 'y')]), Token('COMPARE', '>='), Tree('var_name', [None, Token('NAME', 'z')])]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '<'), Tree('var_name', [None, Token('NAME', 'y')])]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '<='), Tree('var_name', [None, Token('NAME', 'y')]), Token('COMPARE', '<='), Tree('var_name', [None, Token('NAME', 'z')])]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'y')])]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'y')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'z')])]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'x')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'y')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'z')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'p')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'd')]), Token('COMPARE', '=='), Tree('var_name', [None, Token('NAME', 'q')])]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('var_name', [None, Token('NAME', 'true')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('var_name', [None, Token('NAME', 'false')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('func_call', [Tree('var_name', [None, Token('NAME', 'isTrue')]), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'a')]), Token('RPAR', ')')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'c')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')])])", "skewness": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'skewness')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '\\n')])])", "function_name_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('function', [Token('FUNCTION', 'function'), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Token('NEWLINE', '\\n'), Token('NUMBER', '3'), Token('SEMICOLON', ';'), Token('NEWLINE', '\\n'), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'foo'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"foo!\"')]), Token('NEWLINE', '')])])", "names_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'x'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"This Name!\"')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "SBO_param2_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'a')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '25')]), Token('NEWLINE', '')])])", "eventPersistent": "Tree('root', [Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PERSISTENT', 'persistent'), Token('EQUAL', '='), Token('BOOLEAN', 'false')])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'x')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')])])", "SBO_module_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'foo')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '8')]), Token('NEWLINE', '')])])", "rxn_right": "Tree('root', [Tree('simple_stmt', [Tree('reaction', [None, None, Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('SEMICOLON', ';'), None, None]), Token('NEWLINE', '\\n')])])", "deleteRateRuleDirect_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'P1'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'P1'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'x'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'x'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "eventFromTrigger": "Tree('root', [Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('FROMTRIGGER', 'fromTrigger'), Token('EQUAL', '='), Token('BOOLEAN', 'false')])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'x')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')])])", "model2": "Tree('root', [Tree('error_node', [Token('NAME', 'import')]), Token('ERROR_TOKEN', '\"/home/lpsmith/antimony/testmodels/model1.txt\"'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'import')]), Token('ERROR_TOKEN', '\"/home/lpsmith/antimony/testmodels/SBMLModels/oscli.xml\"'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo2'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'q')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [None, Tree('species_list', [Tree('species', [None, None, Token('NAME', 'a')]), Token('PLUS', '+'), Tree('species', [None, None, Token('NAME', 'b')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'c')])]), Token('SEMICOLON', ';'), Tree('func_call', [Tree('var_name', [None, Token('NAME', 'sin')]), Token('LPAR', '('), Tree('parameters', [Token('NUMBER', '24')]), Token('RPAR', ')')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [None, Tree('species_list', [Tree('species', [None, None, Token('NAME', 'e')]), Token('PLUS', '+'), Tree('species', [None, None, Token('NAME', 'd')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'f')])]), Token('SEMICOLON', ';'), Tree('func_call', [Tree('var_name', [None, Token('NAME', 'xor')]), Token('LPAR', '('), Tree('parameters', [Token('NUMBER', '24'), Token('COMMA', ','), Token('NUMBER', '25')]), Token('RPAR', ')')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'r')]), None]), Token('COLON', ':')]), Token('NAME', 'oscli'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'r')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'X1')]), None]), Token('EQUAL', '='), Token('NUMBER', '5')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo2'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'B')]), None]), Token('COLON', ':')]), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "eventDelay_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_E0')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Token('NUMBER', '2'), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'x')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "namedstoich_value": "Tree('root', [Tree('error_node', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Token('NAME', 'sr1')]), Token('ERROR_TOKEN', 'a'), Tree('error_node', [Token('ARROW', '->')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sr1')]), None]), Token('EQUAL', '='), Token('NUMBER', '2')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '')])])", "reaction": "Tree('root', [Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'a')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'k1')]), None]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'k1')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "event": "Tree('root', [Tree('simple_stmt', [Tree('event', [None, Token('AT', 'at'), None, Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'x')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('NEWLINE', '\\n')])])", "standardDeviation": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'standardDeviation')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '\\n')])])", "fixname_test": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'ext_')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ext_')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'ext_'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Token('NUMBER', '6')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ext_')]), None]), Token('EQUAL', '='), Tree('sum', [Token('NUMBER', '5'), Token('PLUS', '+'), Token('NUMBER', '2')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'ext_')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'e1')]), Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'bar'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"bar\"')]), Token('NEWLINE', '')])])", "SBO_function_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('function', [Token('FUNCTION', 'function'), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Token('NEWLINE', '\\n'), Token('NUMBER', '3'), Token('SEMICOLON', ';'), Token('NEWLINE', '\\n'), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')])])", "initialAmount_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '3'), Token('SLASH', '/'), Tree('var_name', [None, Token('NAME', 'C')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "reactionIn_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('variable_in', [Tree('var_name', [None, Token('NAME', 'a')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C')])])]), Token('COLON', ':')]), None, Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'a')])]), Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'k1')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'k1')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "compound_units4_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'persecondsq')]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '1'), Token('SLASH', '/'), Tree('power', [Tree('var_name', [None, Token('NAME', 'second')]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '2')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "subport2_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x0')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x0')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x0')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'baz'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'x1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteReaction_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C1')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'K1')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'K1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'K1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "interactionGeneric": "Tree('root', [Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('interaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Ji')]), None]), Token('COLON', ':')]), Tree('species', [None, None, Token('NAME', 'S2')]), Token('INTERACTION_SYMBOL', '-('), Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "replaceParameter": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '4.8')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'y'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '='), Token('NUMBER', '2.2')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteModifier_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('interaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_J0')]), None]), Token('COLON', ':')]), Tree('species', [None, None, Token('NAME', 'S2')]), Token('INTERACTION_SYMBOL', '-o'), Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S2')]), Token('ERROR_TOKEN', ','), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', '_J0')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteKineticLaw": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'K1')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'K1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "isHomologTo_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'homolog'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '')])])", "defaultSubSubCompartment": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'baz'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "replaceReactionWithKineticLawRxnRef_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), None, Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__S1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J1'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__J1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'Jtop'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteEventAssignment2_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'PRIORITY1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'delay2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'priority2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'q2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'z2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'PRIORITY1')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'e2')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'delay2')]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'y2')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'priority2')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'z2')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'q2')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'q2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'z2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'PRIORITY1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'delay2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'priority2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'Z1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "interactionGeneric_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('interaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Ji')]), None]), Token('COLON', ':')]), Tree('species', [None, None, Token('NAME', 'S2')]), Token('INTERACTION_SYMBOL', '-('), Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "SBO_param2": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'a')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '25')]), Token('NEWLINE', '\\n')])])", "model1": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'p1'), Token('COMMA', ','), Token('NAME', 'p2')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Token('ERROR_TOKEN', '-'), Token('ERROR_TOKEN', '-'), Tree('error_node', [Token('NAME', 'p1')]), Token('ERROR_TOKEN', '-'), Token('ERROR_TOKEN', '-'), Tree('error_node', [Token('NAME', 'p2')]), Token('ERROR_TOKEN', '-'), Token('ERROR_TOKEN', '-'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sub1')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x'), Token('COMMA', ','), Token('NAME', 'y')]), Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sub2')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'z'), Token('COMMA', ','), Token('NAME', 'q')]), Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'sub1')]), Token('ERROR_TOKEN', '-'), Token('ERROR_TOKEN', '-'), Tree('error_node', [Token('NAME', 'sub2')]), Token('ERROR_TOKEN', '\\n'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteAssignmentRuleOfAnother_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('AEQ', ':='), Tree('var_name', [None, Token('NAME', 'X')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'X')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'X')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('AEQ', ':=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'X')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "SBO_submodel_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'A')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '8')]), Token('NEWLINE', '\\n\\n')])])", "deleteDelay_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'DELAY1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "port": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'X')]), Token('RPAR', ')')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteRateRuleOfAnother_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'P1'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'X')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'X')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'X')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'P1'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'X')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "variance": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'variance')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '\\n')])])", "parameter_inf_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'inf')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "subsubport": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x0')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x0')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A1')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'baz'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A2')]), None]), Token('COLON', ':')]), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'biff'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A3')]), None]), Token('COLON', ':')]), Token('NAME', 'baz'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A3')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'A2')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'A1')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'x1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "externalParameter3_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'externalParameter')]), None]), Token('EQUAL', '='), Tree('atom', [Token('MINUS', '-'), Tree('var_name', [None, Token('NAME', 'x')])])]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'externalParameter'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"http://my.url/\"')]), Token('NEWLINE', '')])])", "default_compartment": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'def_comp'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'default_compartment')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'default_compartment')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'S1')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'default_compartment')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'default_compartment')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '')])])", "deleteDelay2_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'PRIORITY1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'delay2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'priority2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'q2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'z2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'PRIORITY1')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'e2')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'delay2')]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'y2')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'priority2')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'z2')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'q2')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'q2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'z2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'PRIORITY1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'delay2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'priority2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'DELAY1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "namedstoich_rate_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'sr1'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Token('NUMBER', '1.1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Token('NAME', 'sr1')]), Token('ERROR_TOKEN', 'a'), Tree('error_node', [Token('ARROW', '->')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sr1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sr1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '')])])", "rxn_right_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_J0')]), None]), Token('COLON', ':')]), None, Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';')])", "replaceReactionWithKineticLaw_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__S1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__x'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'J1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteEventAssignment2": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), Token('AFTER', 'after')]), Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'PRIORITY1')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'e2')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'delay2')]), Token('AFTER', 'after')]), Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'y2')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'priority2')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'z2')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'q2')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'Z1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "mode_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'mode')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '')])])", "module_name": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'foo'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"foo!\"')]), Token('NEWLINE', '\\n')])])", "deleteInitialAssignmentDirect_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('EQUAL', '='), Tree('power', [Token('NUMBER', '3'), Token('CIRCUMFLEX', '^'), Token('NUMBER', '2')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'P1'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'x'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "function_name": "Tree('root', [Tree('function', [Token('FUNCTION', 'function'), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Token('NEWLINE', '\\n'), Token('NUMBER', '3'), Token('SEMICOLON', ';'), Token('NEWLINE', '\\n'), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'foo'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"foo!\"')]), Token('NEWLINE', '')])])", "substance_only_species_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('SUB_MODIFIER', 'substanceOnly'), Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteEventAssignment3": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'Z1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteKineticLaw_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'K1')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'K1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'K1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'K1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "parameter_nan": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'NaN')])]), Token('NEWLINE', '\\n')])])", "replaceReactionWithKineticLawRxnRef": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), None, Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('SEMICOLON', ';'), None, None]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'Jtop'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "global_units_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'length')]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'metre')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'area')]), Token('EQUAL', '='), Tree('power', [Tree('var_name', [None, Token('NAME', 'metre')]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '2')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'volume')]), Token('EQUAL', '='), Tree('power', [Tree('var_name', [None, Token('NAME', 'metre')]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '3')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'substance')]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'mole')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'extent')]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'dimensionless')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'time_unit')]), Token('EQUAL', '='), Tree('atom', [Token('NUMBER', '6e1'), Tree('var_name', [None, Token('NAME', 'second')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "parameter_neginf_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Tree('atom', [Token('MINUS', '-'), Tree('var_name', [None, Token('NAME', 'inf')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "compartment": "Tree('root', [Tree('simple_stmt', [Tree('variable_in', [Tree('var_name', [None, Token('NAME', 'x')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'y')])])]), Token('NEWLINE', '\\n')])])", "deleteInitialAssignmentDirect": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('EQUAL', '='), Tree('power', [Token('NUMBER', '3'), Token('CIRCUMFLEX', '^'), Token('NUMBER', '2')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'P1'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'x'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "replaceCompartment": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Tree('decl_assignment', [Token('EQUAL', '='), Token('NUMBER', '4.8')])])]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'y'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '='), Token('NUMBER', '2.2')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "initialValue_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "parameter": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')])])", "initialAssignment_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '4'), Token('SLASH', '/'), Token('NUMBER', '6')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "initialConcentration_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteModifier": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('interaction', [None, Tree('species', [None, None, Token('NAME', 'S2')]), Token('INTERACTION_SYMBOL', '-o'), Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S2')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "subport2": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x0')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x0')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'baz'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'x1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deletion_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deletion": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x')]), Token('ERROR_TOKEN', '\\n')]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "compound_units1_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'voltage')]), Token('EQUAL', '='), Tree('product', [Tree('atom', [Token('NUMBER', '1e3'), Tree('var_name', [None, Token('NAME', 'gram')])]), Token('STAR', '*'), Tree('power', [Tree('var_name', [None, Token('NAME', 'metre')]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '2')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "initialValue": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')])])", "isHomologTo": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'isHomologTo'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '\\n')])])", "SBO_reaction": "Tree('root', [Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'A')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'J0')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '888')]), Token('NEWLINE', '\\n')])])", "deleteEventAssignment_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'Z1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteProduct_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S2')])]), Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'K1')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'K1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'K1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S2')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "boolean_asnt_rules": "Tree('root', [Tree('error_node', [Token('FUNCTION', 'function'), Token('NAME', 'isTrue'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x')]), Token('RPAR', ')'), Token('NEWLINE', '\\n'), Tree('var_name', [None, Token('NAME', 'x')])]), Token('ERROR_TOKEN', '=='), Tree('error_node', [Token('NAME', 'true')]), Token('ERROR_TOKEN', '\\n'), Token('ERROR_TOKEN', 'end'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('AEQ', ':='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '>'), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'b')]), None]), Token('AEQ', ':='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '>'), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '>'), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'c')]), None]), Token('AEQ', ':='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '>'), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '>='), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'd')]), None]), Token('AEQ', ':='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '<'), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'e')]), None]), Token('AEQ', ':='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '<='), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '<='), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'f')]), None]), Token('AEQ', ':='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '=='), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'g')]), None]), Token('AEQ', ':='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '=='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'h')]), None]), Token('AEQ', ':='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '=='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'z')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'p')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'd')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Token('NAME', 'q')]), Token('ERROR_TOKEN', '\\n'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'i')]), None]), Token('AEQ', ':='), Tree('var_name', [None, Token('NAME', 'true')])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'j')]), None]), Token('AEQ', ':='), Tree('var_name', [None, Token('NAME', 'false')])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('function_call', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'h')]), None]), Token('AEQ', ':='), Token('NAME', 'isTrue'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'a')]), Token('RPAR', ')')]), Token('NEWLINE', '\\n')])])", "hasProperty_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'property'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '')])])", "eventFromTrigger_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_E0')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('FROMTRIGGER', 'fromTrigger'), Token('EQUAL', '='), Token('BOOLEAN', 'false')])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'x')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteSpeciesInDefaultCompartment": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteEventAssignment4": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'Q1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "units": "Tree('root', [Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'mL')]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '.001'), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'liters')])])]), Token('NEWLINE', '\\n')])])", "deleteEventAssignment5": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'z')])]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'q')])])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "eventT0_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_E0')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('T0', 't0'), Token('EQUAL', '='), Token('BOOLEAN', 'false')])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'x')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deletePriority2": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), Token('AFTER', 'after')]), Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'PRIORITY1')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'e2')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'delay2')]), Token('AFTER', 'after')]), Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'y2')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'priority2')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'z2')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'q2')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'PRIORITY1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "compound_units3_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'voltage')]), Token('EQUAL', '='), Tree('product', [Tree('product', [Tree('atom', [Token('NUMBER', '1e3'), Tree('var_name', [None, Token('NAME', 'gram')])]), Token('STAR', '*'), Tree('power', [Tree('var_name', [None, Token('NAME', 'metre')]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '2')])]), Token('SLASH', '/'), Tree('atom', [Token('LPAR', '('), Tree('product', [Tree('power', [Tree('var_name', [None, Token('NAME', 'second')]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '3')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'ampere')])]), Token('RPAR', ')')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "hierarchy_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "subsubport_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x0')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x0')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x0')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A1')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'baz'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A2')]), None]), Token('COLON', ':')]), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'biff'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A3')]), None]), Token('COLON', ':')]), Token('NAME', 'baz'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A3')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'A2')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'A1')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'x1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "kurtosis": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'kurtosis')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '\\n')])])", "isDescribedBy": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'isDescribedBy'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '\\n')])])", "deleteInitialAssignmentIndirect_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '2'), Token('SLASH', '/'), Token('NUMBER', '3')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'P1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteSpeciesPort_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'S1')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C1')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "distribution": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('function_call', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'distribution')]), None]), Token('EQUAL', '='), Token('NAME', 'normal'), Token('LPAR', '('), Tree('parameters', [Token('NUMBER', '3'), Token('COMMA', ','), Token('NAME', 'x')]), Token('RPAR', ')')]), Token('NEWLINE', '')])])", "mean_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'mean')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '')])])", "defaultSubSubCompartment_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'baz'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "defaultSubCompartment_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "SBO_param": "Tree('root', [Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'a')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '25')]), Token('NEWLINE', '\\n')])])", "replaceRateRule_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'x'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Token('NUMBER', '4.8')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'y'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'y'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Token('NUMBER', '2.2')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteEventAssignment5_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'q')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'z')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'z')])]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'q')])])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'q')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'z')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "rateRule_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'x'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Token('NUMBER', '4.4')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "range": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'range')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '{'), Token('ERROR_TOKEN', '-'), Tree('error_node', [Token('NUMBER', '25')]), Token('ERROR_TOKEN', ','), Tree('error_node', [Token('NUMBER', '25')]), Token('ERROR_TOKEN', '}')])", "replaceCompartment_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '4.8')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'y'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '='), Token('NUMBER', '2.2')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "replaceInitialAssignment": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '4'), Token('SLASH', '/'), Token('NUMBER', '8')])]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'y'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '2'), Token('SLASH', '/'), Token('NUMBER', '2')])]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "externalParameter1_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'externalParameter')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '{'), Token('ERROR_TOKEN', '-'), Tree('error_node', [Token('NUMBER', '20')]), Token('ERROR_TOKEN', ','), Token('ERROR_TOKEN', '-'), Tree('error_node', [Token('NUMBER', '15')]), Token('ERROR_TOKEN', '}'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('is_assignment', [Token('NAME', 'externalParameter'), Token('IS', 'is'), Token('ESCAPED_STRING', '\"http://my.url/\"')]), Token('NEWLINE', '\\n')])])", "deleteModifierKineticLaw": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('product', [Tree('var_name', [None, Token('NAME', 'S2')]), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'K1')])]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S2')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "initialAmount": "Tree('root', [Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C')])])]), Tree('decl_assignment', [Token('EQUAL', '='), Tree('product', [Token('NUMBER', '3'), Token('SLASH', '/'), Tree('var_name', [None, Token('NAME', 'C')])])])])]), Token('NEWLINE', '\\n')])])", "deleteSpecies": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C1')])])]), None])]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "parameter_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "SBO_submodel": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'A')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '8')]), Token('NEWLINE', '\\n')])])", "isEncodedBy": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'isEncodedBy'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '\\n')])])", "species": "Tree('root', [Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'y')])])]), None])]), Token('NEWLINE', '\\n')])])", "deleteAssignmentRuleOfAnother": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('AEQ', ':='), Tree('var_name', [None, Token('NAME', 'X')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'X')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "isPartOf": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'isPartOf'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '\\n')])])", "global_units": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'length')]), None]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'meters')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'area')]), None]), Token('EQUAL', '='), Tree('power', [Tree('var_name', [None, Token('NAME', 'meters')]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '2')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'volume')]), None]), Token('EQUAL', '='), Tree('power', [Tree('var_name', [None, Token('NAME', 'meters')]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '3')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'substance')]), None]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'moles')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'extent')]), None]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'dimensionless')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'time_unit')]), None]), Token('EQUAL', '='), Tree('product', [Tree('var_name', [None, Token('NAME', 'seconds')]), Token('STAR', '*'), Token('NUMBER', '60')])]), Token('NEWLINE', '\\n')])])", "deletePriority2_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'PRIORITY1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'delay2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'priority2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'q2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'z2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'PRIORITY1')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'e2')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Tree('var_name', [None, Token('NAME', 'delay2')]), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'y2')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Tree('event_trigger_list', [Token('COMMA', ','), Tree('event_trigger', [Token('PRIORITY', 'priority'), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'priority2')])])]), Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'z2')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'q2')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'q2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'z2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'DELAY1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'PRIORITY1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'delay2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'priority2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'PRIORITY1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "reactionIn": "Tree('root', [Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C')])])]), Token('COLON', ':')]), None, Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'a')])]), Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'k1')]), None]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'k1')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('NEWLINE', '\\n')])])", "deleteSpeciesInDefaultCompartment_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "isVersionOf": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'isVersionOf'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '\\n')])])", "deleteReactant_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S2')])]), Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'K1')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'K1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'K1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "confidenceInterval": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'confidenceInterval')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '{'), Tree('error_node', [Token('NUMBER', '0')]), Token('ERROR_TOKEN', ','), Tree('error_node', [Token('NUMBER', '25')]), Token('ERROR_TOKEN', '}'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteTrigger_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Q1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'E1')]), Token('ERROR_TOKEN', ','), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'Y1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "compound_units1": "Tree('root', [Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'voltage')]), Token('EQUAL', '='), Tree('product', [Tree('atom', [Token('NUMBER', '1000'), Tree('var_name', [None, Token('NAME', 'grams')])]), Token('STAR', '*'), Tree('power', [Tree('atom', [Token('NUMBER', '1'), Tree('var_name', [None, Token('NAME', 'meters')])]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '2')])])]), Token('NEWLINE', '\\n')])])", "hierarchy": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "isPropertyOf": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'isPropertyOf'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '\\n')])])", "replaceReactionWithCompartments1": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('variable_in', [Tree('var_name', [None, Token('NAME', 'x')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C2')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'x')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'J1'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "hasPart_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'part'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '')])])", "hasVersion_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'version'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '')])])", "identity": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'identity'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '\\n')])])", "SBO_module": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'foo')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '8')]), Token('NEWLINE', '\\n')])])", "parameter_neginf": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Tree('atom', [Token('MINUS', '-'), Tree('var_name', [None, Token('NAME', 'infinity')])])]), Token('NEWLINE', '\\n')])])", "parameter_nan_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'NaN')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "credibleInterval": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'credibleInterval')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '{'), Tree('error_node', [Token('NUMBER', '0')]), Token('ERROR_TOKEN', ','), Tree('error_node', [Token('NAME', 'x')]), Token('ERROR_TOKEN', '}'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "replaceInteraction_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'x')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('interaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_J0')]), None]), Token('COLON', ':')]), Tree('species', [None, None, Token('NAME', 'S2')]), Token('INTERACTION_SYMBOL', '-o'), Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S2'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__S2'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__x'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'J1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('interaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_J0')]), None]), Token('COLON', ':')]), Tree('species', [None, None, Token('NAME', 'A__S2')]), Token('INTERACTION_SYMBOL', '-o'), Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J1')]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteEventAssignment": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')]), Token('COMMA', ','), Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Q1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'Z1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteInitialAssignmentOfAnother_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '3'), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'X')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'X')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'X')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'X')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "sampleSize": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sampleSize')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '\\n')])])", "SBO_function": "Tree('root', [Tree('function', [Token('FUNCTION', 'function'), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Token('NEWLINE', '\\n'), Token('NUMBER', '3'), Token('SEMICOLON', ';'), Token('NEWLINE', '\\n'), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')])])", "parameter_inf": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'inf')])]), Token('NEWLINE', '\\n')])])", "compound_units2": "Tree('root', [Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'voltage')]), Token('EQUAL', '='), Tree('product', [Tree('product', [Tree('product', [Tree('atom', [Token('NUMBER', '1000'), Tree('var_name', [None, Token('NAME', 'grams')])]), Token('STAR', '*'), Tree('power', [Tree('var_name', [None, Token('NAME', 'meters')]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '2')])]), Token('SLASH', '/'), Tree('power', [Tree('var_name', [None, Token('NAME', 'seconds')]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '3')])]), Token('SLASH', '/'), Tree('var_name', [None, Token('NAME', 'ampere')])])]), Token('NEWLINE', '\\n')])])", "replaceRateRule": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'x'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Token('NUMBER', '4.8')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'y'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'y'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Token('NUMBER', '2.2')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "port_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'X')]), Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteInitialAssignmentOfAnother": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '3'), Token('STAR', '*'), Tree('var_name', [None, Token('NAME', 'X')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'X')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "replaceReactionWithCompartments2": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('variable_in', [Tree('var_name', [None, Token('NAME', 'J0')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C1')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('variable_in', [Tree('var_name', [None, Token('NAME', 'x')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C2')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'x')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'J1'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "interactionInhibition_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'S1')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('interaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Ji')]), None]), Token('COLON', ':')]), Tree('species', [None, None, Token('NAME', 'S2')]), Token('INTERACTION_SYMBOL', '-|'), Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "credibleInterval_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'credibleInterval')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '{'), Tree('error_node', [Token('NUMBER', '0')]), Token('ERROR_TOKEN', ','), Tree('error_node', [Token('NAME', 'x')]), Token('ERROR_TOKEN', '}')])", "deleteSpeciesInDefaultCompartment2_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "coefficientOfVariation": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'coefficientOfVariation')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '\\n')])])", "compound_units3": "Tree('root', [Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'voltage')]), Token('EQUAL', '='), Tree('product', [Tree('product', [Tree('product', [Tree('atom', [Token('NUMBER', '1000'), Tree('var_name', [None, Token('NAME', 'grams')])]), Token('STAR', '*'), Tree('power', [Tree('atom', [Token('NUMBER', '1'), Tree('var_name', [None, Token('NAME', 'meters')])]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '2')])]), Token('SLASH', '/'), Tree('power', [Tree('atom', [Token('NUMBER', '1'), Tree('var_name', [None, Token('NAME', 'seconds')])]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '3')])]), Token('SLASH', '/'), Tree('atom', [Token('NUMBER', '1'), Tree('var_name', [None, Token('NAME', 'ampere')])])])]), Token('NEWLINE', '\\n')])])", "isEncodedBy_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'encoder'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '')])])", "substance_only_species": "Tree('root', [Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('SUB_MODIFIER', 'substanceOnly'), Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('NEWLINE', '\\n')])])", "replaceSpecies_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C1')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'C1'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__C1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'S2'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "interquartileRange": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'interquartileRange')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '{'), Tree('error_node', [Token('NAME', 'x')]), Token('ERROR_TOKEN', ','), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '}')])", "standardError": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'standardError')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '\\n')])])", "namedstoich_assignment_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sr1')]), None]), Token('AEQ', ':='), Tree('sum', [Token('NUMBER', '2'), Token('PLUS', '+'), Token('NUMBER', '1')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Token('NAME', 'sr1')]), Token('ERROR_TOKEN', 'a'), Tree('error_node', [Token('ARROW', '->')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sr1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '')])])", "SBO_event": "Tree('root', [Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E0')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('atom', [Token('LPAR', '('), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), Token('RPAR', ')')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'b')]), Token('EQUAL', '='), Token('NUMBER', '4')])])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'E0')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '901')]), Token('NEWLINE', '\\n')])])", "assignmentRule_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('AEQ', ':='), Token('NUMBER', '4.8')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "occursIn_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'container'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '')])])", "replaceReactionWithCompartments1_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C2')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'x')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'C2'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__C2'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'A__x'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'J1'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "replaceAssignmentRule": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('AEQ', ':='), Token('NUMBER', '4.8')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'y'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('AEQ', ':='), Token('NUMBER', '2.2')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "units_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'mL')]), Token('EQUAL', '='), Tree('atom', [Token('NUMBER', '1e-3'), Tree('var_name', [None, Token('NAME', 'litre')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "replaceInteraction": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'x')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('interaction', [None, Tree('species', [None, None, Token('NAME', 'S2')]), Token('INTERACTION_SYMBOL', '-o'), Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'J0'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'J1'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "hasProperty": "Tree('root', [Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('annotation', [Tree('var_name', [None, Token('NAME', 'a')]), Token('ANNOT_KEYWORD', 'hasProperty'), Token('ESCAPED_STRING', '\"BQB_thing\"')]), Token('NEWLINE', '\\n')])])", "deleteAssignmentRuleDirect": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('AEQ', ':='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('AEQ', ':='), Token('NUMBER', '0')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteEventAssignment3_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E1')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'Y1')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'Z1')]), Token('EQUAL', '='), Token('NUMBER', '0')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Z1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'Y1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'E1')]), Token('ERROR_TOKEN', ','), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'Z1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteSpeciesInDefaultCompartment2": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "defaultOrNotCompartment": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'baz'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'B')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "submodelInteraction": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'x')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('interaction', [None, Tree('species', [None, None, Token('NAME', 'S2')]), Token('INTERACTION_SYMBOL', '-o'), Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteAssignmentRuleDirect_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), Token('AEQ', ':='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'P1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('AEQ', ':='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "standardDeviation_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'standardDeviation')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '')])])", "deleteSpeciesPortDefaultCompartment_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'S1')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "replaceParameter_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '4.8')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'y'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '='), Token('NUMBER', '2.2')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "reaction_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'a')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), Tree('var_name', [None, Token('NAME', 'k1')]), None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'k1')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "median_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'median')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '')])])", "boolean_init_asnts": "Tree('root', [Tree('error_node', [Token('FUNCTION', 'function'), Token('NAME', 'isTrue'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x')]), Token('RPAR', ')'), Token('NEWLINE', '\\n'), Tree('var_name', [None, Token('NAME', 'x')])]), Token('ERROR_TOKEN', '=='), Tree('error_node', [Token('NAME', 'true')]), Token('ERROR_TOKEN', '\\n'), Token('ERROR_TOKEN', 'end'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '>'), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'b')]), None]), Token('EQUAL', '='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '>'), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '>'), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'c')]), None]), Token('EQUAL', '='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '>'), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '>='), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'd')]), None]), Token('EQUAL', '='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '<'), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'e')]), None]), Token('EQUAL', '='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '<='), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '<='), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'f')]), None]), Token('EQUAL', '='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '=='), Tree('error_node', [Token('NAME', 'y')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'g')]), None]), Token('EQUAL', '='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '=='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Token('NAME', 'z')]), Token('ERROR_TOKEN', '\\n'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'h')]), None]), Token('EQUAL', '='), Token('NAME', 'x')]), Token('ERROR_TOKEN', '=='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'z')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'p')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'd')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '='), Tree('error_node', [Token('NAME', 'q')]), Token('ERROR_TOKEN', '\\n'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'i')]), None]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'true')])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'j')]), None]), Token('EQUAL', '='), Tree('var_name', [None, Token('NAME', 'false')])]), Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('function_call', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'h')]), None]), Token('EQUAL', '='), Token('NAME', 'isTrue'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'a')]), Token('RPAR', ')')]), Token('NEWLINE', '\\n')])])", "range_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'range')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', '{'), Token('ERROR_TOKEN', '-'), Tree('error_node', [Token('NUMBER', '25')]), Token('ERROR_TOKEN', ','), Tree('error_node', [Token('NUMBER', '25')]), Token('ERROR_TOKEN', '}')])", "SBO_event_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'E0')]), None]), Token('COLON', ':')]), Token('AT', 'at'), None, Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'b')]), Token('EQUAL', '='), Token('NUMBER', '4')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'b')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'b')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'E0')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '901')]), Token('NEWLINE', '')])])", "distribution_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'a')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('function_call', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'distribution')]), None]), Token('EQUAL', '='), Token('NAME', 'normal'), Token('LPAR', '('), Tree('parameters', [Token('NUMBER', '3'), Token('COMMA', ','), Token('NAME', 'x')]), Token('RPAR', ')')]), Token('NEWLINE', '')])])", "species_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'y')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "subport": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x0')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x0')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x1')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x1')]), Token('RPAR', ')')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'baz'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x2')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'bar'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'x2')]), Token('RPAR', ')')]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "namedstoich_basic": "Tree('root', [Tree('error_node', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Token('NAME', 'sr1')]), Token('ERROR_TOKEN', 'a'), Tree('error_node', [Token('ARROW', '->')]), Token('ERROR_TOKEN', ';')])", "same_unit_name": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'same_units'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '6')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('unit_assignment', [Tree('var_name', [None, Token('NAME', 'x')]), Token('HAS', 'has'), Tree('var_name', [None, Token('NAME', 'x_unit')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'x_unit')]), Token('EQUAL', '='), Tree('product', [Tree('var_name', [None, Token('NAME', 'second')]), Token('SLASH', '/'), Tree('var_name', [None, Token('NAME', 'litre')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '')])])", "compound_units4": "Tree('root', [Tree('simple_stmt', [Tree('unit_declaration', [Token('UNIT', 'unit'), Tree('var_name', [None, Token('NAME', 'persecondsq')]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '1'), Token('SLASH', '/'), Tree('power', [Tree('var_name', [None, Token('NAME', 'seconds')]), Token('CIRCUMFLEX', '^'), Token('NUMBER', '2')])])]), Token('NEWLINE', '\\n')])])", "replaceInitialAssignment_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '4'), Token('SLASH', '/'), Token('NUMBER', '8')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'x'), Token('IS', 'is')]), Token('ERROR_TOKEN', 'y'), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '='), Tree('product', [Token('NUMBER', '2'), Token('SLASH', '/'), Token('NUMBER', '2')])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "eventDelay": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('event', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_E0')]), None]), Token('COLON', ':')]), Token('AT', 'at'), Tree('event_delay', [Token('NUMBER', '2'), Token('AFTER', 'after')]), Tree('expressions', [Tree('var_name', [None, Token('NAME', 'time')]), Token('COMPARE', '>'), Token('NUMBER', '3')]), None, Token('COLON', ':'), Tree('event_assignment_list', [Tree('event_assignment', [Tree('var_name', [None, Token('NAME', 'x')]), Token('EQUAL', '='), Token('NUMBER', '3')])])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'var')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "SBO_submodel_shadowed_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sboTerm')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sboTerm')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [Tree('sboterm', [Tree('var_name', [None, Token('NAME', 'foo')]), Token('__ANON_0', '.sboTerm'), Token('EQUAL', '='), Token('SBOTERM', '83')]), Token('NEWLINE', '\\n\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('var_name', [None, Token('NAME', 'A')]), Token('__ANON_0', '.sboTerm')]), Token('ERROR_TOKEN', 'is'), Tree('error_node', [Token('NAME', 'b')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'b')]), None]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'A')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'SBOTerm')]), None]), Token('EQUAL', '='), Token('NUMBER', '27')]), Token('NEWLINE', '\\n\\n')])])", "mean": "Tree('root', [Tree('error_node', [Token('NAME', 'a')]), Token('ERROR_TOKEN', '.'), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'mean')]), None]), Token('EQUAL', '='), Token('NUMBER', '25')]), Token('NEWLINE', '')])])", "deleteSpeciesPortDefaultCompartment": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), Tree('parameters', [Token('NAME', 'S1')]), Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S1')]), None]), None])]), Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'S1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "deleteRateRuleIndirect": "Tree('root', [Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('rate_rule', [Token('NAME', 'P1'), Tree('apostrophe', [Token('QUOTE', \"'\")]), Token('EQUAL', '='), Token('NUMBER', '3')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar1'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Token('NAME', 'delete')]), Token('ERROR_TOKEN', 'A'), Token('ERROR_TOKEN', '.'), Tree('error_node', [Token('NAME', 'P1')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "submodelInteraction_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), None]), Token('COMMA', ','), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('reaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None]), Token('COLON', ':')]), Tree('species_list', [Tree('species', [None, None, Token('NAME', 'x')])]), Token('ARROW', '->'), None, Token('SEMICOLON', ';'), None, None]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('interaction', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', '_J0')]), None]), Token('COLON', ':')]), Tree('species', [None, None, Token('NAME', 'S2')]), Token('INTERACTION_SYMBOL', '-o'), Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'J0')]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'S2')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('error_node', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '=')]), Token('ERROR_TOKEN', ';'), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "defaultOrNotCompartment_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'compartment')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), Tree('in_comp', [Token('IN', 'in'), Tree('var_name', [None, Token('NAME', 'C')])])]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'y')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'C')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), None, Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('TYPE_MODIFIER', 'species')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'x')]), None]), Token('EQUAL', '='), Token('NUMBER', '1')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'baz'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'A')]), None]), Token('COLON', ':')]), Token('NAME', 'bar'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('mmodel_call', [Tree('reaction_name', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'B')]), None]), Token('COLON', ':')]), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])])", "SBO_localvar_rt": "Tree('root', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('modular_model', [Token('MODEL', 'model'), Token('STAR', '*'), Token('NAME', 'foo'), Token('LPAR', '('), None, Token('RPAR', ')'), Tree('simple_stmt_list', [Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('assignment', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sboTerm')]), None]), Token('EQUAL', '='), Token('NUMBER', '5')]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n\\n')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')]), Tree('simple_stmt', [Tree('declaration', [Tree('decl_modifiers', [Token('VAR_MODIFIER', 'const')]), Tree('decl_item', [Tree('namemaybein', [Tree('var_name', [None, Token('NAME', 'sboTerm')]), None]), None])]), Token('SEMICOLON', ';')]), Tree('simple_stmt', [None, Token('NEWLINE', '\\n')])]), Token('END', 'end')]), Tree('simple_stmt', [None, Token('NEWLINE', '')])])"}